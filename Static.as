package  {	import flash.text.TextFormat;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.text.TextField;	import flash.media.Sound;	import flash.net.URLRequest;	import flash.events.Event;		public class Static {		public function Static() {		}				public static function playSound():void {			var req:URLRequest = new URLRequest('blocksound.mp3');			var blockSound:Sound = new Sound();			blockSound.addEventListener(Event.COMPLETE, function (e:Event) {e.target.play()});			blockSound.load(req);		}				public static function playLonger():void {			var req:URLRequest = new URLRequest('longersound.mp3');			var blockSound:Sound = new Sound();			blockSound.addEventListener(Event.COMPLETE, function (e:Event) {e.target.play()});			blockSound.load(req);		}				public static function textField(text:String, size:int = 24):TextField {			var textField:TextField = new TextField();			var textFormat:TextFormat = Static.textFormat;			textFormat.size = size;			textField.defaultTextFormat = textFormat;			textField.autoSize = 'center';			textField.x = (500 / 2) - (textField.width / 2);			textField.selectable = false;			textField.text = text;			return textField;		}				public static function bitmap(bData:BitmapData):Bitmap {			var bitmap:Bitmap = new Bitmap(bData);			bitmap.x = (500 / 2) - (bitmap.width / 2);			bitmap.y = (500 / 2) - (bitmap.height / 2);			return bitmap;		}				public static function get textFormat():TextFormat {			var textFormat:TextFormat = new TextFormat();			textFormat.font = 'Georgia';			textFormat.size = 22;			textFormat.italic = true;			return textFormat;		}				public static function get scoreURL():String {			return 'http://dev.playdesigncode.com/samebricks/scores.php';		}	}	}